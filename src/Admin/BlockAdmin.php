<?php

namespace CyberDuck\BlockPage\Admin;

use CyberDuck\BlockPage\Action\GridFieldVersionedContentBlockItemRequest;
use CyberDuck\BlockPage\Model\BlockDataList;
use CyberDuck\BlockPage\Model\ContentBlock;
use SilverStripe\Admin\ModelAdmin;
use SilverStripe\Control\Controller;
use SilverStripe\Forms\GridField\GridFieldDetailForm;
use SilverStripe\ORM\ArrayList;
use SilverStripe\ORM\DataList;
use SilverStripe\ORM\Filters\PartialMatchFilter;
use SilverStripe\View\ViewableData;
use Symbiote\GridFieldExtensions\GridFieldOrderableRows;

class BlockAdmin extends ModelAdmin
{
    private $filterRequest;

    public function getEditForm($id = null, $fields = null)
    {
        $form = parent::getEditForm($id , $fields);
        $form
            ->Fields()
            ->fieldByName($this->sanitiseClassName($this->modelClass))
            ->getConfig()
            ->removeComponentsByType(GridFieldOrderableRows::class)
            ->getComponentByType(GridFieldDetailForm::class)
            ->setItemRequestClass(GridFieldVersionedContentBlockItemRequest::class);

        return $form;
    }

    public function getList()
    {
        $list = parent::getList(); // TODO: Change the autogenerated stub

        $this->filterRequest = $this->getRequest()->requestVar('filter');
        $titleFilter = $this->getTitleFilterField();
        //$titleFilter = 'content';
        if (! empty($titleFilter)) {
            //filter all the sub class with the title that matches the filter value
            $classNamesMap = $list->map('ClassName', 'ClassName')->toArray();
            $classNames = array_unique(array_keys($classNamesMap));
            $idsFilteredByTitle = [ ];
            foreach ($classNames as $className) {
                $ids = array_unique(array_keys($className::get()->filter([
                    'Title:PartialMatch' => $titleFilter,
                ])->map('ID', 'ID')->toArray()));

                foreach ($ids as $key => $id) {
                    $idsFilteredByTitle[] = $id;
                }
            }

            //or the parent records with MenuTitle that matches that filter value
            $contentBlockIds = $list->filter([ 'MenuTitle:PartialMatch' => $titleFilter ])->map('ID', 'ID')->toArray();
            foreach ($contentBlockIds as $key => $id) {
                $idsFilteredByTitle[] = $id;
            }

            $list = $list->filterAny([
                'ID' => $idsFilteredByTitle,
            ]);
        }

        $idFilter = $this->getIDFilterField();
        if (! empty($idFilter)) {
            $list = $list->filter([ 'ID' => $idFilter ]);
        }

        return $list;
    }

    private function getTitleFilterField()
    {
        if (isset($this->filterRequest['CyberDuck-BlockPage-Model-ContentBlock']['FilterTitle']) and ! empty($this->filterRequest['CyberDuck-BlockPage-Model-ContentBlock']['FilterTitle'])) {
            return $this->filterRequest['CyberDuck-BlockPage-Model-ContentBlock']['FilterTitle'];
        }

        return "";
    }

    private function getIDFilterField()
    {
        if (isset($this->filterRequest['CyberDuck-BlockPage-Model-ContentBlock']['ID']) and ! empty($this->filterRequest['CyberDuck-BlockPage-Model-ContentBlock']['ID'])) {
            return $this->filterRequest['CyberDuck-BlockPage-Model-ContentBlock']['ID'];
        }

        return "";
    }
}
